diff -r -U 4 agw/customtreectrl.py agw-patched/customtreectrl.py
--- agw/customtreectrl.py	2012-10-14 17:50:36.000000000 +0200
+++ agw-patched/customtreectrl.py	2014-03-09 14:32:25.000000000 +0100
@@ -1600,8 +1600,9 @@
         self._height = 0        # height of this item
 
         self._isCollapsed = True
         self._hasHilight = False    # same as focused
+        self._hilightPart = 0       # 0: full; else wx.TREE_HITTEST_ONITEM[LOWER|UPPER]PART
         self._hasPlus = False       # used for item which doesn't have
                                     # children but has a [+] button
         self._isBold = False        # render the label in bold font
         self._isItalic = False      # render the label in italic font
@@ -2097,11 +2098,22 @@
 
         :param bool `set`: ``True`` to set the focus to the item, ``False`` otherwise.    
         """
 
-        self._hasHilight = set 
+        self._hasHilight = set
+        self._hilightPart = 0
 
 
+    def SetPartialHilight(self, flags=0):
+        """
+        Sets the item hilight style.
+
+        :param `flags`: ``0`` to hilight all of the item; ``wx.TREE_HITTEST_ONITEMUPPERPART`` to hilight the upper third or ``wx.TREE_HITTEST_ONITEMLOWERPART`` for the lower third.
+        """
+
+        self._hilightPart = flags
+        
+
     def HasChildren(self):
         """
         Returns whether the item has children or not.
 
@@ -2119,8 +2131,14 @@
         """
 
         return self._hasHilight != 0 
 
+    def PartialHilight(self):
+        """
+        Returns the hilight style.
+        """
+
+        return self._hilightPart
 
     def IsExpanded(self):
         """
         Returns whether the item is expanded or not.
@@ -4584,8 +4602,11 @@
 
         :param `item`: an instance of L{GenericTreeItem}.
         """
 
+        if item is None:
+            return
+
         i = item
 
         # First see if there are any children.
         children = i.GetChildren()
@@ -7124,9 +7145,9 @@
             if not self.IsItemEnabled(self._current):
                 event.Skip()
                 return
             
-            if not event.HasModifiers():
+            if not (event.HasModifiers() or event.CmdDown()):
                 event = TreeEvent(wxEVT_TREE_ITEM_ACTIVATED, self.GetId())
                 event._item = self._current
                 event.SetEventObject(self)
                 self.GetEventHandler().ProcessEvent(event)
